BLUE='\033[0;34m'
GREEN='\033[1;32m'
RED='\033[1;31m'
RESET='\033[0m'

BBLUE='\033[1;34;107m'
BGREEN='\033[1;32;107m'
BYELLOW='\033[1;33;107m'
BRED='\033[1;31;107m'

BOLD='\033[1m'
BG='\033[107m'

YES_NO="(${RESET}${GREEN}Y${RESET}${BLUE}/${RESET}${RED}n${RESET}${BLUE}) ${RESET}"

update_bc=true
update_np=true
modified_polymer=false
use_wget=false
download_examples=false

print_help() {
  printf "${BBLUE}  O${BRED}p${BYELLOW}t${BBLUE}i${BGREEN}o${BRED}n${BBLUE}s${RESET}${BG}:  ${RESET}\n"
  printf "${BLUE}-b${RESET}: DO ${BOLD}NOT${RESET} update ${BG}bower components${RESET} (also keeps pre-existing bower_components folder)\n"
  printf "${BLUE}-e${RESET}: Download some ${BG}test cases${RESET}\n"
  printf "${BLUE}-n${RESET}: Do ${BOLD}NOT${RESET} update ${BG}node modules${RESET} (also keeps pre-existing node_modules folder)\n"
  printf "${BLUE}-p${RESET}: Use ${BG}modified Polymer 1.0${RESET} version\n"
  printf "${BLUE}-w${RESET}: Use ${BG}wget${RESET} instead of ${BG}curl${RESET}\n"
  printf "${BLUE}-h${RESET}: For ${BG}help${RESET}, i.e. printing this message again. ¯\_(ツ)_/¯\n"
}

use_modified_polymer() {
  printf "${BOLD}To use the modified Polymer 1.0 version:${RESET}\n"

  printf "${BLUE}To continue, clone the Polymer repository? ${RESET}${YES_NO}"
  read input

  shopt -s nocasematch
    if [[ $input == "yes" ]] || [[ $input == "y" ]]; then
      git clone "https://github.com/Polymer/polymer.git"
      modified_polymer=true
    else
      printf "${RED}Exiting without download.${RESET}"
    fi
  shopt -u nocasematch
}

curl_examples() {
  mkdir -p data
  mkdir -p src

  printf "${BLUE}Downloading examples...${RESET}\n"
  # Pesto Example
  cd src
  curl -s -L https://goo.gl/ILwX3j -o app-icons.html

  curl -s -L https://goo.gl/Tg2Wm3 -o recipe-app.html
  curl -s -L https://goo.gl/h2tzGk -o recipe-detail.html
  curl -s -L https://goo.gl/hHgYal -o recipe-list.html

  cd ../data
  curl -s -L https://goo.gl/dmNXVE -o recipes.json

  cd ../
  curl -s -L https://goo.gl/DwbCss -o pesto_manifest.json
  curl -s -L https://goo.gl/rBBVWg -o index.html
  curl -s -L https://goo.gl/AIouLS -o indexshadow.html

  # Shrine Example
  cd src
  curl -s -L https://goo.gl/fMMNfl -o shrine-app.html
  curl -s -L https://goo.gl/tyrD1G -o shrine-detail.html
  curl -s -L https://goo.gl/I7wT3y -o shrine-featured-item.html
  curl -s -L https://goo.gl/MaZREb -o shrine-item.html
  curl -s -L https://goo.gl/CSi8iZ -o shrine-list.html
  curl -s -L https://goo.gl/s1tuuc -o shrine-simple-item.html

  cd ../data
  curl -s -L https://goo.gl/5KGt2k -o featured.json
  curl -s -L https://goo.gl/pw8jdW -o items.json

  cd ../
  curl -s -L https://goo.gl/kgO6qw -o shrine_manifest.json
  curl -s -L https://goo.gl/AX5aie -o index2.html
  curl -s -L https://goo.gl/oUo6lu -o index2shadow.html

  # Getting Started Example
  cd src
  curl -s -L https://goo.gl/CQ7Nkc -o x-app.html

  cd ../
  curl -s -L https://goo.gl/FFYNKx -o index3.html
  curl -s -L https://goo.gl/SZbIRR -o index3shadow.html
  printf "${BLUE}Examples downloaded. Check the ${RESET}${BG}src/${RESET} "
  printf "${BLUE}directory and${RESET} ${BG}index*.html${RESET} ${BLUE}files.${RESET}\n"
}

wget_examples() {
  mkdir -p data
  mkdir -p src

  printf "${RED}TODO. Skipping this for now because I cURL.${RESET}"
}

change_paths() {
  printf "${BOLD}Paths must be converted from Polymer in ${BG}bower_components${RESET}${BOLD} to "
  printf "Polymer in ${BG}node_modules${RESET}.\n${RESET}"
  printf "${BLUE}Continue?${RESET} ${YES_NO}"

  read input

  shopt -s nocasematch
    if [[ $input == "yes" ]] || [[ $input == "y" ]]; then
      rm BowerToNPM*.class
      javac BowerToNPM.java

      printf "${BLUE}Attempt to use default paths for ${RESET}${BG}webcomponentsjs${RESET} "
      printf "${BLUE}and${RESET} ${BG}polymer${RESET}${BLUE}? ${RESET}"
      printf "${YES_NO}"

      read input
      shopt -s nocasematch
        if [[ $input == "yes" ]] || [[ $input == "y" ]]; then
          _p='node_modules/@polymer/polymer/polymer.html\n'
          _wc='node_modules/@polymer/polymer/node_modules/webcomponents.js/webcomponents-lite.js\n'
          _op='bower_components/polymer/polymer.html\n'
          _owc='bower_components/webcomponentsjs/webcomponents-lite.js\n'
          _dir='bower_components'
          txt=$_p$_wc$_op$_owc$_dir

          cp /dev/null _default_bower_to_npm_inputs.txt
          echo -e ${txt} >> _default_bower_to_npm_inputs.txt
          java BowerToNPM -s < _default_bower_to_npm_inputs.txt
          
          if [[ "$download_examples" == true ]]; then
            txt=$_p$_wc$_op$_owc$_dir

            cp /dev/null _default_bower_to_npm_inputs.txt
            echo -e ${txt} >> _default_bower_to_npm_inputs.txt
            java BowerToNPM -s < _default_bower_to_npm_inputs.txt

            files=("index.html" "index2.html" "index3.html" "indexshadow.html" "index2shadow.html" "index3shadow.html")
            for i in "${files[@]}"
            do
              tmp=$_p$_wc$_op$_owc$i
              cp /dev/null _default_bower_to_npm_inputs.txt
              echo -e ${tmp} >> _default_bower_to_npm_inputs.txt
              java BowerToNPM -s < _default_bower_to_npm_inputs.txt
            done

          fi
        elif [[ $input == "no" ]] || [[ $input == "n" ]]; then
          java BowerToNPM
        else
          printf "${RED}Exiting without download.${RESET}"
        fi
      shopt -u nocasematch
    else
      printf "${RED}Exiting without running${RESET} ${BG}BowerToNPM\n${RESET}."
    fi
  shopt -u nocasematch
}

cleanup() {
  rm BowerToNPM*.class
}

while getopts ":b|:e|:h|:n|:p|:w" opt; do
  case $opt in
    b)
      update_bc=false
      ;;
    e)
      download_examples=true
      ;;
    h)
      print_help
      exit 1
      ;;
    n)
      update_np=false
      ;;
    p)
      use_modified_polymer
      ;;
    w)
      use_wget=true
      ;;
  esac
done

if [[ "$update_bc" == true ]]; then
  rm -rf bower_components
  bower update
fi

if [[ "$update_np" == true ]]; then
  rm -rf node_modules
  npm update
fi

if [[ "$download_examples" == true ]]; then
  if [[ "$use_wget" == true ]]; then
    wget_examples
  else
    curl_examples
  fi
fi

if [[ "$modified_polymer" == true ]]; then
  npm rm @polymer/polymer -g
  cd polymer
  npm link @polymer/polymer
  cd ..
  npm link @polymer/polymer
  change_paths
  mv _modified_polymer_shadow.html polymer/node_modules/\@polymer/polymer/src/mini/shadow.html
fi

cleanup
