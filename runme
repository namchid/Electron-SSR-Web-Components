BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
RESET='\033[0m'

BBLUE='\033[1;34;107m'
BGREEN='\033[1;32;107m'
BYELLOW='\033[1;33;107m'
BRED='\033[1;31;107m'

BOLD='\033[1m'
BG='\033[107m'

while getopts "b|:e|:h|:n|:p|:w" opt; do
  case $opt in
    h)
      printf "${BBLUE}  O${BRED}p${BYELLOW}t${BBLUE}i${BGREEN}o${BRED}n${BBLUE}s${RESET}${BG}:  ${RESET}\n"
      printf "${BLUE}-b${RESET}: DO ${BOLD}NOT${RESET} update ${BG}bower components${RESET} (also keeps pre-existing bower_components folder)\n"
      printf "${BLUE}-e${RESET}: Download some ${BG}test cases${RESET}\n"
      printf "${BLUE}-n${RESET}: Do ${BOLD}NOT${RESET} update ${BG}node modules${RESET} (also keeps pre-existing node_modules folder)\n"
      printf "${BLUE}-p${RESET}: Use ${BG}modified Polymer 1.0${RESET} version\n"
      printf "${BLUE}-w${RESET}: Use ${BG}wget${RESET} instead of ${BG}curl${RESET}\n"
      printf "${BLUE}-h${RESET}: For ${BG}help${RESET}, i.e. printing this message again. ¯\_(ツ)_/¯\n"
      exit 1
      ;;
    a)
      echo "-a was triggered, Parameter: $OPTARG" >&2
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done
